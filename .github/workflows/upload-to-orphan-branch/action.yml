name: upload-to-orphan-branch
description: todo

inputs:
  branch:
    description: todo
    required: true
  path:
    description: todo
    required: true
  comitter-name:
    description: todo
    required: false
    default: "github-actions[bot]"
  comitter-email:
    description: todo
    required: false
    default: "41898282+github-actions[bot]@users.noreply.github.com"
  commit-message:
    description: todo
    required: false
    default: ""
  if-no-files-found:
    description: todo
    required: false
    default: "ignore"
  overwrite:
    description: todo
    required: false
    default: "false"
  include-hidden-files:
    description: todo
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - shell: bash
      env:
        BRANCH: ${{ inputs.branch }}
        FILES_PATH: ${{ inputs.path }}
        COMMITTER_NAME: ${{ inputs.comitter-name }}
        COMMITTER_EMAIL: ${{ inputs.comitter-email }}
        COMMIT_MESSAGE: ${{ inputs.commit-message }}
        IF_NO_FILES_FOUND: ${{ inputs.if-no-files-found }}
        OVERWRITE: ${{ inputs.overwrite }}
        INCLUDE_HIDDEN_FILES: ${{ inputs.include-hidden-files }}
      run: |
        if [[ "$IF_NO_FILES_FOUND" != "ignore" && "$IF_NO_FILES_FOUND" != "error" ]]; then
          echo "Invalid value for IF_NO_FILES_FOUND: $IF_NO_FILES_FOUND" >&2
          exit 1
        fi
        if [[ "$OVERWRITE" != "true" && "$OVERWRITE" != "false" ]]; then
          echo "Invalid value for OVERWRITE: $OVERWRITE" >&2
          exit 1
        fi
        if [[ "$INCLUDE_HIDDEN_FILES" != "true" && "$INCLUDE_HIDDEN_FILES" != "false" ]]; then
          echo "Invalid value for INCLUDE_HIDDEN_FILES: $INCLUDE_HIDDEN_FILES" >&2
          exit 1
        fi

        is_hidden_file() {
          local file_path="$1"
          IFS="/" read -ra parts <<< "$file_path"
          for part in "${parts[@]}"; do
            if [[ "$part" == "." || "$part" == ".." ]]; then
              continue
            fi
            if [[ "$part" == .* ]]; then
              return 0
            fi
          done
          return 1
        }

        shopt -s globstar
        declare -A files=()
        for file_path in $FILES_PATH; do
          if [[ "${file_path:0:1}" == "!" ]]; then
            find "${file_path:1}" -type f -print0 | while IFS= read -r -d "" file; do
              unset "files[$file]"
            done
          else
            find "$file_path" -type f -print0 | while IFS= read -r -d "" file; do
              if [[ "$INCLUDE_HIDDEN_FILES" == "false" && $(is_hidden_file "$file") ]]; then
                continue
              fi
              files["$file"]=1
            done
          fi
        done

        if [[ "$IF_NO_FILES_FOUND" = "error" && ${#files[@]} -eq 0 ]]; then
          echo "No files found" >&2
          exit 1
        fi

        git worktree remove -f .upload_orphan_worktree || true
        git worktree add --detach .upload_orphan_worktree

        (
          cd .upload_orphan_worktree
          git switch --orphan "$BRANCH"
          git reset --hard

          echo "Preparing to add ${#files[@]} files..."
          for file in "${!files[@]}"; do
            echo "Adding file: $file"
            dir="$(dirname "$file")"
            mkdir -p "$dir"
            cp "../$file" "$dir"
            git add "$file"
          done

          git -c "user.name=$COMMITTER_NAME" -c "user.email=$COMMITTER_EMAIL" \
            commit --allow-empty --allow-empty-message -m "$COMMIT_MESSAGE"
          if [[ "$OVERWRITE" == "true" ]]; then
            git push -f origin "HEAD:$BRANCH"
          else
            git push origin "HEAD:$BRANCH"
          fi
        )

        git worktree remove -f .upload_orphan_worktree
